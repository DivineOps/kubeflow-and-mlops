# Kubeflow Container Build Pipeline

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: |
    sudo apt-get install -y python-setuptools
    pip install flake8
    pip install flake8_formatter_junit_xml
    flake8 --format junit-xml --output-file $(Build.BinariesDirectory)/flake8_report.xml --exit-zero --ignore E111
  displayName: 'Check code quality'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '$(Build.BinariesDirectory)/*_report.xml'
    testRunTitle: 'Publish test results' 

- task: Docker@2
  inputs:
    containerRegistry: 'Kubeflow Container Registry'
    repository: 'kubeflowregistry.azurecr.io/kubeflow/preprocess'
    command: 'buildAndPush'
    Dockerfile: 'code/preprocess/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Kubeflow Container Registry'
    repository: 'kubeflowregistry.azurecr.io/kubeflow/train'
    command: 'buildAndPush'
    Dockerfile: 'code/training/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Kubeflow Container Registry'
    repository: 'kubeflowregistry.azurecr.io/kubeflow/score'
    command: 'buildAndPush'
    Dockerfile: 'code/scoring/Dockerfile'

- task: Docker@2
  inputs:
    containerRegistry: 'Kubeflow Container Registry'
    repository: 'kubeflowregistry.azurecr.io/kubeflow/release'
    command: 'buildAndPush'
    Dockerfile: 'code/release/Dockerfile'
